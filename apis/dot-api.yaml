openapi: "3.0.0"
info:
  version: 1.2.0
  title: API title goes here 
  description: OpenAPI Specification description goes here
  license:
    name:  EUPL-1.2 license
servers:
  - url: https://example.com/myapi/v1
  - url: https://example.com:443/myapi/v2
paths:
  /pets:
    get:
      summary: List all pets
      operationId: listPets
      tags:
        - pets
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
            maximum: 100
            format: int32
      responses:
        '200':
          description: A paged array of pets
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/Pets"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a pet
      operationId: createPets
      tags:
        - pets
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BookingNoteRequest"
  /pets/{petId}:
    get:
      summary: Info for a specific pet
      operationId: showPetById
      tags:
        - pets
      parameters:
        - name: petId
          in: path
          required: true
          description: The id of the pet to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pet"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    Pet:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        tag:
          type: string
    Pets:
      type: array
      maxItems: 100
      items:
        $ref: "#/components/schemas/Pet"
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    BookingNoteRequest:
      type: object
      properties:
        note:
          type: string
        postedDate:
          type: string
          format: date
          example: '2202-12-12'
        postedTime:
          type: string
          format: date-time
          example: '1997-04-01T04:00:09-12:00'
          #example: '1997-04-01T04:00:09-01:30'
          #example: '1997-04-01T04:00:09+14:00'          
          #example:  '2024-10-23T06:50:16.559Z'
          #example: '2022-12-31T04:00:09.12'
