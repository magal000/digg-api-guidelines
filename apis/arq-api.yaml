openapi: "3.0.0"
info:
  version: 1.2.0
  title: RAP-LP
  description: OpenAPI Specification example to handle Rules for the category []Hypermedia] in the Swedish REST API-profil https://dev.dataportal.se/rest-api-profil
  license:
    name:  EUPL-1.2 license
  contact:
    name: RAP-LP Team
    email: rap-lp@example.com
servers:
  - url: http://petstore.swagger.io/v1
paths:
  /headerexample:
    get:
      summary: List all pets
      description: |
        By default it will only return pets up to the limit value.
        Set the limit to 0 to return all pets.
      operationId: listPets
      tags:
        - pets
      parameters:
        - name: Date
          in: header
          description: Request header Date
          schema:
            type: string
            format: date-time
          required: true
        - name: Accept-Charset
          in: header
          description: Request header Accept-Charset
          schema:
            type: string
            format: charset
          required: true
        - name: ETag
          in: header
          description: Request header ETag
          schema:
            type: string
            format: etag
          required: true
        - name: Cache-Control
          in: header
          description: Request header Cache-Control
          schema:
            type: string
            enum:
              - no-cache
              - no-store
              - must-revalidate
          required: true
        - name: str-param
          in: cookie
          description: string value for cookie parameter
          schema:
            type: string
          required: false
        - name: uuid-param
          in: cookie
          description: uuid value for cookie parameter
          schema:
            type: string
            format: uuid
          required: false
        - name: int-param
          in: cookie
          description: integer cookie parameter
          schema:
            type: integer
            format: int32
          required: false
        - name: Connection
          in: header
          description: Request header Connection
          schema:
            type: string
            enum:
              - keep-alive
              - close
              - upgrade
          required: true
      responses:
        '200':
          description: A paged array of pets
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/Pets"
            application/xml:
              schema:
                $ref: "#/components/schemas/Pets"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a pet
      description:
        Create a new pet in the store. Duplicates are allowed
      operationId: createPets
      tags:
        - pets
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /pets/{petId}:
    get:
      summary: Info for a specific pet
      description:
        Returns info about a pet
      operationId: showPetById
      tags:
        - pets
      parameters:
        - name: petId
          in: path
          required: true
          description: The id of the pet to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pet"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    Pet:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        tag:
          type: string
    Pets:
      type: array
      maxItems: 100
      items:
        $ref: "#/components/schemas/Pet"
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string

tags:
  - name: pets
